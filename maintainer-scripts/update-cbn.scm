#!/usr/bin/env gosh

(use file.util)
(use gauche.collection)
(use github)
(use nix-prefetch)
(use rfc.tls)
(use srfi-13)

(define-constant *builds-to-keep* 60)

(define (%generate-nix-expr tag&rev :optional (indent 2))
  (let* ([tag (car tag&rev)]
         [rev (cdr tag&rev)]
         [version tag]
         [build-number (string-append "b" tag)]
         [sha256 (nix-prefetch-url/cache!
                   #"https://github.com/cataclysmbnteam/Cataclysm-BN/archive/~|rev|.tar.gz"
                   :unpack? #t
                   :name #"cataclysm-bn-git-~|version|")]
         [lines `(,#"~|build-number| = let"
                  "  args = {"
                  ,#"    version = \"~|version|\";"
                  ,#"    rev = \"~|rev|\";"
                  ,#"    sha256 = \"~|sha256|\";"
                  "  };"
                  "in with cataclysmBN; {"
                  "  tiles = attachPkgs pkgs (common.tiles.override args);"
                  "  curses = attachPkgs pkgs (common.curses.override args);"
                  "};")])
    (string-join (map (pa$ string-append (make-string indent #\ )) lines)
                 "\n")))

(define (generate-nix-exprs tags&revs)
  (let1 latest (string-append "b" (caar tags&revs))
    (string-join `("# Automatically generated by `update-cbn.scm`. DO NOT EDIT!"
                   "{ cataclysmBN, common }:\n\nrec {"
                   ,#"  latest = ~|latest|;"
                   ,@(map %generate-nix-expr tags&revs)
                   "}")
                 "\n")))

(define (main _)
  (default-tls-class <mbed-tls>)
  (load-sha256-cache!)
  (let1 tags&revs (take (tree-map->alist (github-get-cbn-release-tags))
                        *builds-to-keep*)
    (with-output-to-file (build-path "cataclysm-bn.nix")
                         (cut print (generate-nix-exprs tags&revs))))
  (save-sha256-cache!)
  (exit))
